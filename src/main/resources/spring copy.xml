<?xml version="1.0" encoding="UTF-8" ?>


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
   http://www.springframework.org/schema/aop 
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<aop:aspectj-autoproxy />
	<aop:config proxy-target-class="true" />
	<context:annotation-config/> 
	<context:component-scan base-package="com.spring.model"/>	
	
<!--  autowire for PointA -->
  	<bean name="triangle" class="com.spring.model.Triangle" autowire="byName" init-method="initT" destroy-method="destroyT">
		<property name="name" value="Triangle Name" />
		<property name="messageSource" ref="messageSource" />
		<property name="pointA" ref="point1" />
		<property name="pointB" ref="point2" />
		<property name="pointC" ref="point3" />
		</bean>
	
	<bean id = "triangle1" class="com.spring.core.Triangle" name = "triangle-name" autowire = "byName" >
		<!--<property name = "ponitA" ref = "zeroPoint" />
		<property name = "ponitB" ref = "point11" />	
		<property name = "ponitC"  ref = "point21" />-->
		<!-- <property name = "points">
			<list>
				<ref bean = "zeroPoint" />
				<ref bean = "point11" /> 
				<ref bean = "point21" />
			</list>
		</property> 
		-->
	</bean>
	
	<bean id="pointA" class="com.spring.core.Point">
		<!-- <qualifier value="circleRelated" /> -->
		<property name = "x" value="0" />
		<property name = "y" value="0" /> 
	</bean>
	
	<bean id = "ponitB" class="com.spring.core.Point">
		<property name = "x" value="-20" />
		<property name = "y" value="0" />
	</bean>
	
	<bean id="ponitC" class="com.spring.core.Point">
		<property name = "x" value="20" />
		<property name = "y" value="0" /> 
	</bean>
	<alias name = "triangle1" alias = "triabgle - alias"></alias>
	
	
	
	
	
	
	

	<!-- Only 1 id, but Many names cane be there;Also any special chars can 
		be there in name. else name & id same -->
	<bean id="point1" name="myFoo,/kingBean,notBar" class="com.spring.model.Point">
		<property name="x" value="0" />
		<property name="y" value="0" />
	</bean>

	<bean id="point2" class="com.spring.model.Point">
		<property name="x" value="1" />
		<property name="y" value="0" />
	</bean>

	<bean id="point3" class="com.spring.model.Point">
		<property name="x" value="0" />
		<property name="y" value="1" />
	</bean>

	<bean name="circle" class="com.spring.model.Circle">
		<!-- <property name="name" value="Circle Name" /> -->
	</bean>

	<bean name="shapeService" class="com.spring.aop.ShapeService"
		autowire="byName" />

	<bean name="loggingAspect" class="com.spring.aop.LoggingAspect" />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>
					mymessagesFile
				</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />
		
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
		<!-- Instead of mention all separate BeanPostProcessor we can direct use below annotation annotation-config -->
		
	<!-- <context:annotaion-config/> -->
		
	<bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/Employee" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	
	<alias name="ds" alias="dataSource"/>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="ds" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="configLocation">
			<value>hibernate.cfg.xml</value>
		</property>
	</bean>

</beans>